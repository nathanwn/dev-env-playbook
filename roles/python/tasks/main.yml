---
- name: Install dependencies (Oracle Linux).
  become: true
  ansible.builtin.dnf:
    name: "{{ item }}"
  loop:
    - autoconf
    - bluez-libs
    - bzip2-devel
    - expat-devel
    - libdb-devel
    - libffi-devel
    - libuuid-devel
    - gcc
    - gdbm-devel
    - glibc-devel
    - gnupg
    - gpm-devel
    - lcov
    - make
    - ncurses-devel
    - openssl-devel
    - pkgconfig
    - readline-devel
    - sqlite-devel
    - tk-devel
    - wget
    - xz
    - xz-devel
    - zlib-devel
  when: ansible_distribution == "OracleLinux"

- name: Download source.
  ansible.builtin.get_url:
    url: "https://www.python.org/ftp/python/{{ item.semver }}/Python-{{ item.semver }}.tar.xz"
    dest: "{{ lookup('env', 'HOME') }}/install/Python-{{ item.semver }}.tar.xz"
    checksum: "{{ item.checksum }}"
    mode: 0664
  loop: "{{ python.versions }}"

- name: Extract.
  ansible.builtin.unarchive:
    src: "{{ lookup('env', 'HOME') }}/install/Python-{{ item.semver }}.tar.xz"
    dest: "{{ lookup('env', 'HOME') }}/install/"
  loop: "{{ python.versions }}"

- name: Install.
  become: true
  ansible.builtin.shell:
    creates: "/opt/python/py3{{ item.semver.split('.')[1] }}/bin/python3.{{ item.semver.split('.')[1] }}"
    chdir: "{{ lookup('env', 'HOME') }}/install/Python-{{ item.semver }}"
    cmd: |
      "./configure --prefix=/opt/python/py3{{ item.semver.split('.')[1] }} --enable-optimizations"
      make
      sudo make install
  loop: "{{ python.versions }}"

- name: Symlink.
  ansible.builtin.file:
    src: "/opt/python/py3{{ item.semver.split('.')[1] }}/bin/python3.{{ item.semver.split('.')[1] }}"
    dest: "{{ lookup('env', 'HOME') }}/bin/python3.{{ item.semver.split('.')[1] }}"
    mode: a+x
    state: link
  loop: "{{ python.versions }}"
